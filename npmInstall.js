// npm模块安装机制
// 发出npm install命令
// 查询node_modules目录之中是否已经存在指定模块
// 若存在，不再重新安装；若不存在，npm向registry查询模块压缩包的网址，下载压缩包，放在根目录下的.npm目录里，解压压缩包到当前项目的node_modules目录

// npm实现原理
// 输入npm install命令后，会经历如下几个阶段，以npm5.5.1为例
// 1.执行工程自身preinstall
// 当前npm工程如果定义了preinstall钩子此时会被执行。
// 2.确定首层依赖模块
// 首先需要做的是确定工程中的首层依赖，也就是dependencies和devDependencies属性中直接指定的模块。
// 工程本身是整棵依赖树的根节点，每个首层依赖模块都是根节点下面的一棵子树，npm会开启多进程从每个首层依赖模块开始逐步寻找更深层级的节点。
// 3.获取模块
// 获取模块是一个递归的过程，分为以下几步：
// 获取模块信息。
// 获取模块实体。
// 查找该模块依赖，如果有依赖则回到第一步，如果没有则停止。
// 4.模块扁平化
// 上一步获取到的是一棵完整的依赖树，其中可能包含大量重复模块。
// npm3开始默认加入了一个dedupe的过程。它会遍历所有节点，逐个将模块放在根节点下面，也就是node_modules的第一层。当发现有重复模块时，则将其丢弃。
// 5.安装模块
// 这一步将会更新工程中的node_modules，并执行模块中的生命周期函数（按照preinstal => install => postinstall的顺序）
// 6.执行工程自身生命周期
// 当前npm工程如果定义了钩子此时会被执行（按照install => postinstall => prepublish => prepare的顺序）。
// 最后一步是生成或更新版本描述文件，npm install过程完成。